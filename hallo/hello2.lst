GAS LISTING /tmp/ccelzP8g.s 			page 1


   1               		.file	"hello2.c"
   2               	__SREG__ = 0x3f
   3               	__SP_H__ = 0x3e
   4               	__SP_L__ = 0x3d
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.global __do_copy_data
   8               		.global __do_clear_bss
   9               		.stabs	"/home/mkowalik/svn/hallo/",100,0,2,.Ltext0
  10               		.stabs	"hello2.c",100,0,2,.Ltext0
  11               		.text
  12               	.Ltext0:
  13               		.stabs	"gcc2_compiled.",60,0,0,0
  14               		.stabs	"int:t(0,1)=r(0,1);-32768;32767;",128,0,1,0
  15               		.stabs	"char:t(0,2)=@s8;r(0,2);0;255;",128,0,1,0
  16               		.stabs	"long int:t(0,3)=@s32;r(0,3);020000000000;017777777777;",128,0,1,0
  17               		.stabs	"unsigned int:t(0,4)=r(0,4);0;0177777;",128,0,1,0
  18               		.stabs	"long unsigned int:t(0,5)=@s32;r(0,5);0;037777777777;",128,0,1,0
  19               		.stabs	"long long int:t(0,6)=@s64;r(0,6);01000000000000000000000;0777777777777777777777;",128,0,1,
  20               		.stabs	"long long unsigned int:t(0,7)=@s64;r(0,7);0;01777777777777777777777;",128,0,1,0
  21               		.stabs	"short int:t(0,8)=r(0,8);-32768;32767;",128,0,1,0
  22               		.stabs	"short unsigned int:t(0,9)=r(0,9);0;0177777;",128,0,1,0
  23               		.stabs	"signed char:t(0,10)=@s8;r(0,10);-128;127;",128,0,1,0
  24               		.stabs	"unsigned char:t(0,11)=@s8;r(0,11);0;255;",128,0,1,0
  25               		.stabs	"float:t(0,12)=r(0,1);4;0;",128,0,1,0
  26               		.stabs	"double:t(0,13)=r(0,1);4;0;",128,0,1,0
  27               		.stabs	"long double:t(0,14)=r(0,1);4;0;",128,0,1,0
  28               		.stabs	"void:t(0,15)=(0,15)",128,0,1,0
  29               		.stabs	"/usr/lib/gcc/avr/4.4.2/../../../../avr/include/avr/io.h",130,0,0,0
  30               		.stabs	"/usr/lib/gcc/avr/4.4.2/../../../../avr/include/avr/sfr_defs.h",130,0,0,0
  31               		.stabs	"/usr/lib/gcc/avr/4.4.2/../../../../avr/include/inttypes.h",130,0,0,0
  32               		.stabs	"/usr/lib/gcc/avr/4.4.2/../../../../avr/include/stdint.h",130,0,0,0
  33               		.stabs	"int8_t:t(4,1)=(0,10)",128,0,121,0
  34               		.stabs	"uint8_t:t(4,2)=(0,11)",128,0,122,0
  35               		.stabs	"int16_t:t(4,3)=(0,1)",128,0,123,0
  36               		.stabs	"uint16_t:t(4,4)=(0,4)",128,0,124,0
  37               		.stabs	"int32_t:t(4,5)=(0,3)",128,0,125,0
  38               		.stabs	"uint32_t:t(4,6)=(0,5)",128,0,126,0
  39               		.stabs	"int64_t:t(4,7)=(0,6)",128,0,128,0
  40               		.stabs	"uint64_t:t(4,8)=(0,7)",128,0,129,0
  41               		.stabs	"intptr_t:t(4,9)=(4,3)",128,0,142,0
  42               		.stabs	"uintptr_t:t(4,10)=(4,4)",128,0,147,0
  43               		.stabs	"int_least8_t:t(4,11)=(4,1)",128,0,159,0
  44               		.stabs	"uint_least8_t:t(4,12)=(4,2)",128,0,164,0
  45               		.stabs	"int_least16_t:t(4,13)=(4,3)",128,0,169,0
  46               		.stabs	"uint_least16_t:t(4,14)=(4,4)",128,0,174,0
  47               		.stabs	"int_least32_t:t(4,15)=(4,5)",128,0,179,0
  48               		.stabs	"uint_least32_t:t(4,16)=(4,6)",128,0,184,0
  49               		.stabs	"int_least64_t:t(4,17)=(4,7)",128,0,192,0
  50               		.stabs	"uint_least64_t:t(4,18)=(4,8)",128,0,199,0
  51               		.stabs	"int_fast8_t:t(4,19)=(4,1)",128,0,213,0
  52               		.stabs	"uint_fast8_t:t(4,20)=(4,2)",128,0,218,0
  53               		.stabs	"int_fast16_t:t(4,21)=(4,3)",128,0,223,0
  54               		.stabs	"uint_fast16_t:t(4,22)=(4,4)",128,0,228,0
  55               		.stabs	"int_fast32_t:t(4,23)=(4,5)",128,0,233,0
  56               		.stabs	"uint_fast32_t:t(4,24)=(4,6)",128,0,238,0
  57               		.stabs	"int_fast64_t:t(4,25)=(4,7)",128,0,246,0
GAS LISTING /tmp/ccelzP8g.s 			page 2


  58               		.stabs	"uint_fast64_t:t(4,26)=(4,8)",128,0,253,0
  59               		.stabs	"intmax_t:t(4,27)=(4,7)",128,0,273,0
  60               		.stabs	"uintmax_t:t(4,28)=(4,8)",128,0,278,0
  61               		.stabn	162,0,0,0
  62               		.stabs	"int_farptr_t:t(3,1)=(4,5)",128,0,77,0
  63               		.stabs	"uint_farptr_t:t(3,2)=(4,6)",128,0,81,0
  64               		.stabn	162,0,0,0
  65               		.stabn	162,0,0,0
  66               		.stabs	"/usr/lib/gcc/avr/4.4.2/../../../../avr/include/avr/fuse.h",130,0,0,0
  67               		.stabs	"__fuse_t:t(5,1)=(5,2)=s2low:(0,11),0,8;high:(0,11),8,8;;",128,0,247,0
  68               		.stabn	162,0,0,0
  69               		.stabn	162,0,0,0
  70               		.stabs	"main:F(0,1)",36,0,10,main
  71               	.global	main
  72               		.type	main, @function
  73               	main:
  74               		.stabd	46,0,0
   0:hello2.c      **** #include <avr/io.h>    // header file
   1:hello2.c      **** #include <util/delay.h>
   2:hello2.c      **** 
   3:hello2.c      **** #define true 1
   4:hello2.c      **** 
   5:hello2.c      **** 
   6:hello2.c      **** 
   7:hello2.c      **** void Delay(unsigned long count);
   8:hello2.c      **** 
   9:hello2.c      **** int main(void)         // program starts here
  10:hello2.c      **** {
  75               		.stabn	68,0,11,.LM0-.LFBB1
  76               	.LM0:
  77               	.LFBB1:
  78               	/* prologue: function */
  79               	/* frame size = 0 */
  11:hello2.c      ****     DDRB = 255;        // set port B for output
  80               		.stabn	68,0,12,.LM1-.LFBB1
  81               	.LM1:
  82 0000 8FEF      		ldi r24,lo8(-1)
  83 0002 87BB      		out 55-0x20,r24
  12:hello2.c      **** 
  13:hello2.c      **** 
  14:hello2.c      ****      while(true) {
  15:hello2.c      ****        PORTB = 0xFF;
  84               		.stabn	68,0,16,.LM2-.LFBB1
  85               	.LM2:
  86 0004 2FEF      		ldi r18,lo8(-1)
  87               	.LBB18:
  88               	.LBB19:
  89               	.LBB20:
  90               	.LBB21:
  91               		.stabs	"/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h",132,0,0,.Ltext1
  92               	.Ltext1:
   0:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   1:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h ****    Copyright (c) 2007 Joerg Wunsch
   2:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h ****    All rights reserved.
   3:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h **** 
   4:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h ****    Redistribution and use in source and binary forms, with or without
   5:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h ****    modification, are permitted provided that the following conditions are met:
GAS LISTING /tmp/ccelzP8g.s 			page 3


   6:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h **** 
   7:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h ****    * Redistributions of source code must retain the above copyright
   8:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h ****      notice, this list of conditions and the following disclaimer.
   9:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h **** 
  10:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h ****    * Redistributions in binary form must reproduce the above copyright
  11:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h ****      notice, this list of conditions and the following disclaimer in
  12:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h ****      the documentation and/or other materials provided with the
  13:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h ****      distribution.
  14:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h **** 
  15:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h ****    * Neither the name of the copyright holders nor the names of
  16:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h ****      contributors may be used to endorse or promote products derived
  17:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h ****      from this software without specific prior written permission.
  18:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h **** 
  19:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  20:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  21:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  22:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  23:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  24:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  25:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  26:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  27:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  28:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  29:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h ****   POSSIBILITY OF SUCH DAMAGE. */
  30:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h **** 
  31:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h **** /* $Id: delay_basic.h,v 1.1 2007/05/13 21:23:20 joerg_wunsch Exp $ */
  32:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h **** 
  33:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h **** #ifndef _UTIL_DELAY_BASIC_H_
  34:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h **** #define _UTIL_DELAY_BASIC_H_ 1
  35:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h **** 
  36:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h **** #include <inttypes.h>
  37:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h **** 
  38:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h **** /** \file */
  39:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h **** /** \defgroup util_delay_basic <util/delay_basic.h>: Basic busy-wait delay loops
  40:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h ****     \code
  41:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h ****     #include <util/delay_basic.h>
  42:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h ****     \endcode
  43:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h **** 
  44:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h ****     The functions in this header file implement simple delay loops
  45:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h ****     that perform a busy-waiting.  They are typically used to
  46:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h ****     facilitate short delays in the program execution.  They are
  47:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h ****     implemented as count-down loops with a well-known CPU cycle
  48:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h ****     count per loop iteration.  As such, no other processing can
  49:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h ****     occur simultaneously.  It should be kept in mind that the
  50:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h ****     functions described here do not disable interrupts.
  51:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h **** 
  52:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h ****     In general, for long delays, the use of hardware timers is
  53:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h ****     much preferrable, as they free the CPU, and allow for
  54:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h ****     concurrent processing of other events while the timer is
  55:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h ****     running.  However, in particular for very short delays, the
  56:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h ****     overhead of setting up a hardware timer is too much compared
  57:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h ****     to the overall delay time.
  58:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h **** 
  59:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h ****     Two inline functions are provided for the actual delay algorithms.
  60:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h **** 
  61:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h **** */
  62:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h **** 
GAS LISTING /tmp/ccelzP8g.s 			page 4


  63:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h **** #if !defined(__DOXYGEN__)
  64:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h **** static inline void _delay_loop_1(uint8_t __count) __attribute__((always_inline));
  65:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h **** static inline void _delay_loop_2(uint16_t __count) __attribute__((always_inline));
  66:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h **** #endif
  67:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h **** 
  68:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h **** /** \ingroup util_delay_basic
  69:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h **** 
  70:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h ****     Delay loop using an 8-bit counter \c __count, so up to 256
  71:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h ****     iterations are possible.  (The value 256 would have to be passed
  72:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h ****     as 0.)  The loop executes three CPU cycles per iteration, not
  73:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h ****     including the overhead the compiler needs to setup the counter
  74:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h ****     register.
  75:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h **** 
  76:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h ****     Thus, at a CPU speed of 1 MHz, delays of up to 768 microseconds
  77:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h ****     can be achieved.
  78:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h **** */
  79:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h **** void
  80:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h **** _delay_loop_1(uint8_t __count)
  81:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h **** {
  82:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h **** 	__asm__ volatile (
  83:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h **** 		"1: dec %0" "\n\t"
  84:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h **** 		"brne 1b"
  85:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h **** 		: "=r" (__count)
  86:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h **** 		: "0" (__count)
  87:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h **** 	);
  88:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h **** }
  89:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h **** 
  90:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h **** /** \ingroup util_delay_basic
  91:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h **** 
  92:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h ****     Delay loop using a 16-bit counter \c __count, so up to 65536
  93:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h ****     iterations are possible.  (The value 65536 would have to be
  94:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h ****     passed as 0.)  The loop executes four CPU cycles per iteration,
  95:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h ****     not including the overhead the compiler requires to setup the
  96:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h ****     counter register pair.
  97:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h **** 
  98:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h ****     Thus, at a CPU speed of 1 MHz, delays of up to about 262.1
  99:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h ****     milliseconds can be achieved.
 100:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h ****  */
 101:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h **** void
 102:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h **** _delay_loop_2(uint16_t __count)
 103:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h **** {
 104:/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h **** 	__asm__ volatile (
  93               		.stabn	68,0,105,.LM3-.LFBB1
  94               	.LM3:
  95 0006 84E2      		ldi r24,lo8(-3036)
  96 0008 94EF      		ldi r25,hi8(-3036)
  97               	.L2:
  98               	.LBE21:
  99               	.LBE20:
 100               	.LBE19:
 101               	.LBE18:
 102               		.stabs	"hello2.c",132,0,0,.Ltext2
 103               	.Ltext2:
 104               		.stabn	68,0,16,.LM4-.LFBB1
 105               	.LM4:
 106 000a 28BB      		out 56-0x20,r18
 107               	.LBB25:
GAS LISTING /tmp/ccelzP8g.s 			page 5


 108               	.LBB24:
 109               	.LBB23:
 110               	.LBB22:
 111               		.stabs	"/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h",132,0,0,.Ltext3
 112               	.Ltext3:
 113               		.stabn	68,0,105,.LM5-.LFBB1
 114               	.LM5:
 115 000c FC01      		movw r30,r24
 116               	/* #APP */
 117               	 ;  105 "/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h" 1
 118 000e 3197      		1: sbiw r30,1
 119 0010 01F4      		brne 1b
 120               	 ;  0 "" 2
 121               	/* #NOAPP */
 122               	.LBE22:
 123               	.LBE23:
 124               	.LBE24:
 125               	.LBE25:
 126               		.stabs	"hello2.c",132,0,0,.Ltext4
 127               	.Ltext4:
  16:hello2.c      ****        _delay_ms(250);
  17:hello2.c      ****        PORTB = 0x00;
 128               		.stabn	68,0,18,.LM6-.LFBB1
 129               	.LM6:
 130 0012 18BA      		out 56-0x20,__zero_reg__
 131               	.LBB26:
 132               	.LBB27:
 133               	.LBB28:
 134               	.LBB29:
 135               		.stabs	"/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h",132,0,0,.Ltext5
 136               	.Ltext5:
 137               		.stabn	68,0,105,.LM7-.LFBB1
 138               	.LM7:
 139 0014 FC01      		movw r30,r24
 140               	/* #APP */
 141               	 ;  105 "/usr/lib/gcc/avr/4.4.2/../../../../avr/include/util/delay_basic.h" 1
 142 0016 3197      		1: sbiw r30,1
 143 0018 01F4      		brne 1b
 144               	 ;  0 "" 2
 145               	/* #NOAPP */
 146 001a 00C0      		rjmp .L2
 147               	.LBE29:
 148               	.LBE28:
 149               	.LBE27:
 150               	.LBE26:
 151               		.size	main, .-main
 152               		.stabs	"__count:r(4,4)",64,0,130,30
 153               		.stabn	192,0,0,.LBB20-.LFBB1
 154               		.stabn	224,0,0,.LBE20-.LFBB1
 155               		.stabs	"__count:r(4,4)",64,0,130,30
 156               		.stabn	192,0,0,.LBB23-.LFBB1
 157               		.stabn	224,0,0,.LBE23-.LFBB1
 158               		.stabs	"__count:r(4,4)",64,0,130,30
 159               		.stabn	192,0,0,.LBB28-.LFBB1
 160               		.stabn	224,0,0,.LBE28-.LFBB1
 161               	.Lscope1:
 162               		.stabs	"",36,0,0,.Lscope1-.LFBB1
GAS LISTING /tmp/ccelzP8g.s 			page 6


 163               		.stabd	78,0,0
 164               		.stabs	"Delay:F(0,15)",36,0,27,Delay
 165               		.stabs	"count:P(0,5)",64,0,27,22
 166               	.global	Delay
 167               		.type	Delay, @function
 168               	Delay:
 169               		.stabd	46,0,0
 170               		.stabs	"hello2.c",132,0,0,.Ltext6
 171               	.Ltext6:
  18:hello2.c      ****        _delay_ms(250);
  19:hello2.c      ****      }
  20:hello2.c      **** 
  21:hello2.c      **** 
  22:hello2.c      **** 
  23:hello2.c      ****     return (0);        // return something
  24:hello2.c      **** }
  25:hello2.c      **** 
  26:hello2.c      **** void Delay(unsigned long count) {
 172               		.stabn	68,0,27,.LM8-.LFBB2
 173               	.LM8:
 174               	.LFBB2:
 175               	/* prologue: function */
 176               	/* frame size = 0 */
 177               	/* epilogue start */
  27:hello2.c      ****   while(count--);
  28:hello2.c      **** }
 178               		.stabn	68,0,29,.LM9-.LFBB2
 179               	.LM9:
 180 001c 0895      		ret
 181               		.size	Delay, .-Delay
 182               	.Lscope2:
 183               		.stabs	"",36,0,0,.Lscope2-.LFBB2
 184               		.stabd	78,0,0
 185               		.stabs	"",100,0,0,.Letext0
 186               	.Letext0:
GAS LISTING /tmp/ccelzP8g.s 			page 7


DEFINED SYMBOLS
                            *ABS*:00000000 hello2.c
     /tmp/ccelzP8g.s:2      *ABS*:0000003f __SREG__
     /tmp/ccelzP8g.s:3      *ABS*:0000003e __SP_H__
     /tmp/ccelzP8g.s:4      *ABS*:0000003d __SP_L__
     /tmp/ccelzP8g.s:5      *ABS*:00000000 __tmp_reg__
     /tmp/ccelzP8g.s:6      *ABS*:00000001 __zero_reg__
     /tmp/ccelzP8g.s:73     .text:00000000 main
     /tmp/ccelzP8g.s:168    .text:0000001c Delay

UNDEFINED SYMBOLS
__do_copy_data
__do_clear_bss
